// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// Holds bindings to UnQLite.
class UnQLite {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  UnQLite(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  UnQLite.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  late final ffi.Pointer<ffi.Uint64> ___security_cookie =
      _lookup<ffi.Uint64>('__security_cookie');

  int get __security_cookie => ___security_cookie.value;

  set __security_cookie(int value) => ___security_cookie.value = value;

  int unqlite_open(
    ffi.Pointer<ffi.Pointer<unqlite>> ppDB,
    ffi.Pointer<ffi.Int8> zFilename,
    int iMode,
  ) {
    return _unqlite_open(
      ppDB,
      zFilename,
      iMode,
    );
  }

  late final _unqlite_open_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_open>>('unqlite_open');
  late final _dart_unqlite_open _unqlite_open =
      _unqlite_open_ptr.asFunction<_dart_unqlite_open>();

  int unqlite_config(
    ffi.Pointer<unqlite> pDb,
    int nOp,
  ) {
    return _unqlite_config(
      pDb,
      nOp,
    );
  }

  late final _unqlite_config_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_config>>('unqlite_config');
  late final _dart_unqlite_config _unqlite_config =
      _unqlite_config_ptr.asFunction<_dart_unqlite_config>();

  int unqlite_close(
    ffi.Pointer<unqlite> pDb,
  ) {
    return _unqlite_close(
      pDb,
    );
  }

  late final _unqlite_close_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_close>>('unqlite_close');
  late final _dart_unqlite_close _unqlite_close =
      _unqlite_close_ptr.asFunction<_dart_unqlite_close>();

  int unqlite_kv_store(
    ffi.Pointer<unqlite> pDb,
    ffi.Pointer<ffi.Void> pKey,
    int nKeyLen,
    ffi.Pointer<ffi.Void> pData,
    int nDataLen,
  ) {
    return _unqlite_kv_store(
      pDb,
      pKey,
      nKeyLen,
      pData,
      nDataLen,
    );
  }

  late final _unqlite_kv_store_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_store>>('unqlite_kv_store');
  late final _dart_unqlite_kv_store _unqlite_kv_store =
      _unqlite_kv_store_ptr.asFunction<_dart_unqlite_kv_store>();

  int unqlite_kv_append(
    ffi.Pointer<unqlite> pDb,
    ffi.Pointer<ffi.Void> pKey,
    int nKeyLen,
    ffi.Pointer<ffi.Void> pData,
    int nDataLen,
  ) {
    return _unqlite_kv_append(
      pDb,
      pKey,
      nKeyLen,
      pData,
      nDataLen,
    );
  }

  late final _unqlite_kv_append_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_append>>('unqlite_kv_append');
  late final _dart_unqlite_kv_append _unqlite_kv_append =
      _unqlite_kv_append_ptr.asFunction<_dart_unqlite_kv_append>();

  int unqlite_kv_store_fmt(
    ffi.Pointer<unqlite> pDb,
    ffi.Pointer<ffi.Void> pKey,
    int nKeyLen,
    ffi.Pointer<ffi.Int8> zFormat,
  ) {
    return _unqlite_kv_store_fmt(
      pDb,
      pKey,
      nKeyLen,
      zFormat,
    );
  }

  late final _unqlite_kv_store_fmt_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_store_fmt>>(
          'unqlite_kv_store_fmt');
  late final _dart_unqlite_kv_store_fmt _unqlite_kv_store_fmt =
      _unqlite_kv_store_fmt_ptr.asFunction<_dart_unqlite_kv_store_fmt>();

  int unqlite_kv_append_fmt(
    ffi.Pointer<unqlite> pDb,
    ffi.Pointer<ffi.Void> pKey,
    int nKeyLen,
    ffi.Pointer<ffi.Int8> zFormat,
  ) {
    return _unqlite_kv_append_fmt(
      pDb,
      pKey,
      nKeyLen,
      zFormat,
    );
  }

  late final _unqlite_kv_append_fmt_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_append_fmt>>(
          'unqlite_kv_append_fmt');
  late final _dart_unqlite_kv_append_fmt _unqlite_kv_append_fmt =
      _unqlite_kv_append_fmt_ptr.asFunction<_dart_unqlite_kv_append_fmt>();

  int unqlite_kv_fetch(
    ffi.Pointer<unqlite> pDb,
    ffi.Pointer<ffi.Void> pKey,
    int nKeyLen,
    ffi.Pointer<ffi.Void> pBuf,
    ffi.Pointer<ffi.Int64> pBufLen,
  ) {
    return _unqlite_kv_fetch(
      pDb,
      pKey,
      nKeyLen,
      pBuf,
      pBufLen,
    );
  }

  late final _unqlite_kv_fetch_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_fetch>>('unqlite_kv_fetch');
  late final _dart_unqlite_kv_fetch _unqlite_kv_fetch =
      _unqlite_kv_fetch_ptr.asFunction<_dart_unqlite_kv_fetch>();

  int unqlite_kv_fetch_callback(
    ffi.Pointer<unqlite> pDb,
    ffi.Pointer<ffi.Void> pKey,
    int nKeyLen,
    ffi.Pointer<ffi.NativeFunction<_typedefC_71>> xConsumer,
    ffi.Pointer<ffi.Void> pUserData,
  ) {
    return _unqlite_kv_fetch_callback(
      pDb,
      pKey,
      nKeyLen,
      xConsumer,
      pUserData,
    );
  }

  late final _unqlite_kv_fetch_callback_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_fetch_callback>>(
          'unqlite_kv_fetch_callback');
  late final _dart_unqlite_kv_fetch_callback _unqlite_kv_fetch_callback =
      _unqlite_kv_fetch_callback_ptr
          .asFunction<_dart_unqlite_kv_fetch_callback>();

  int unqlite_kv_delete(
    ffi.Pointer<unqlite> pDb,
    ffi.Pointer<ffi.Void> pKey,
    int nKeyLen,
  ) {
    return _unqlite_kv_delete(
      pDb,
      pKey,
      nKeyLen,
    );
  }

  late final _unqlite_kv_delete_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_delete>>('unqlite_kv_delete');
  late final _dart_unqlite_kv_delete _unqlite_kv_delete =
      _unqlite_kv_delete_ptr.asFunction<_dart_unqlite_kv_delete>();

  int unqlite_kv_config(
    ffi.Pointer<unqlite> pDb,
    int iOp,
  ) {
    return _unqlite_kv_config(
      pDb,
      iOp,
    );
  }

  late final _unqlite_kv_config_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_config>>('unqlite_kv_config');
  late final _dart_unqlite_kv_config _unqlite_kv_config =
      _unqlite_kv_config_ptr.asFunction<_dart_unqlite_kv_config>();

  int unqlite_kv_cursor_init(
    ffi.Pointer<unqlite> pDb,
    ffi.Pointer<ffi.Pointer<unqlite_kv_cursor>> ppOut,
  ) {
    return _unqlite_kv_cursor_init(
      pDb,
      ppOut,
    );
  }

  late final _unqlite_kv_cursor_init_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_cursor_init>>(
          'unqlite_kv_cursor_init');
  late final _dart_unqlite_kv_cursor_init _unqlite_kv_cursor_init =
      _unqlite_kv_cursor_init_ptr.asFunction<_dart_unqlite_kv_cursor_init>();

  int unqlite_kv_cursor_release(
    ffi.Pointer<unqlite> pDb,
    ffi.Pointer<unqlite_kv_cursor> pCur,
  ) {
    return _unqlite_kv_cursor_release(
      pDb,
      pCur,
    );
  }

  late final _unqlite_kv_cursor_release_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_cursor_release>>(
          'unqlite_kv_cursor_release');
  late final _dart_unqlite_kv_cursor_release _unqlite_kv_cursor_release =
      _unqlite_kv_cursor_release_ptr
          .asFunction<_dart_unqlite_kv_cursor_release>();

  int unqlite_kv_cursor_seek(
    ffi.Pointer<unqlite_kv_cursor> pCursor,
    ffi.Pointer<ffi.Void> pKey,
    int nKeyLen,
    int iPos,
  ) {
    return _unqlite_kv_cursor_seek(
      pCursor,
      pKey,
      nKeyLen,
      iPos,
    );
  }

  late final _unqlite_kv_cursor_seek_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_cursor_seek>>(
          'unqlite_kv_cursor_seek');
  late final _dart_unqlite_kv_cursor_seek _unqlite_kv_cursor_seek =
      _unqlite_kv_cursor_seek_ptr.asFunction<_dart_unqlite_kv_cursor_seek>();

  int unqlite_kv_cursor_first_entry(
    ffi.Pointer<unqlite_kv_cursor> pCursor,
  ) {
    return _unqlite_kv_cursor_first_entry(
      pCursor,
    );
  }

  late final _unqlite_kv_cursor_first_entry_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_cursor_first_entry>>(
          'unqlite_kv_cursor_first_entry');
  late final _dart_unqlite_kv_cursor_first_entry
      _unqlite_kv_cursor_first_entry = _unqlite_kv_cursor_first_entry_ptr
          .asFunction<_dart_unqlite_kv_cursor_first_entry>();

  int unqlite_kv_cursor_last_entry(
    ffi.Pointer<unqlite_kv_cursor> pCursor,
  ) {
    return _unqlite_kv_cursor_last_entry(
      pCursor,
    );
  }

  late final _unqlite_kv_cursor_last_entry_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_cursor_last_entry>>(
          'unqlite_kv_cursor_last_entry');
  late final _dart_unqlite_kv_cursor_last_entry _unqlite_kv_cursor_last_entry =
      _unqlite_kv_cursor_last_entry_ptr
          .asFunction<_dart_unqlite_kv_cursor_last_entry>();

  int unqlite_kv_cursor_valid_entry(
    ffi.Pointer<unqlite_kv_cursor> pCursor,
  ) {
    return _unqlite_kv_cursor_valid_entry(
      pCursor,
    );
  }

  late final _unqlite_kv_cursor_valid_entry_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_cursor_valid_entry>>(
          'unqlite_kv_cursor_valid_entry');
  late final _dart_unqlite_kv_cursor_valid_entry
      _unqlite_kv_cursor_valid_entry = _unqlite_kv_cursor_valid_entry_ptr
          .asFunction<_dart_unqlite_kv_cursor_valid_entry>();

  int unqlite_kv_cursor_next_entry(
    ffi.Pointer<unqlite_kv_cursor> pCursor,
  ) {
    return _unqlite_kv_cursor_next_entry(
      pCursor,
    );
  }

  late final _unqlite_kv_cursor_next_entry_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_cursor_next_entry>>(
          'unqlite_kv_cursor_next_entry');
  late final _dart_unqlite_kv_cursor_next_entry _unqlite_kv_cursor_next_entry =
      _unqlite_kv_cursor_next_entry_ptr
          .asFunction<_dart_unqlite_kv_cursor_next_entry>();

  int unqlite_kv_cursor_prev_entry(
    ffi.Pointer<unqlite_kv_cursor> pCursor,
  ) {
    return _unqlite_kv_cursor_prev_entry(
      pCursor,
    );
  }

  late final _unqlite_kv_cursor_prev_entry_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_cursor_prev_entry>>(
          'unqlite_kv_cursor_prev_entry');
  late final _dart_unqlite_kv_cursor_prev_entry _unqlite_kv_cursor_prev_entry =
      _unqlite_kv_cursor_prev_entry_ptr
          .asFunction<_dart_unqlite_kv_cursor_prev_entry>();

  int unqlite_kv_cursor_key(
    ffi.Pointer<unqlite_kv_cursor> pCursor,
    ffi.Pointer<ffi.Void> pBuf,
    ffi.Pointer<ffi.Int32> pnByte,
  ) {
    return _unqlite_kv_cursor_key(
      pCursor,
      pBuf,
      pnByte,
    );
  }

  late final _unqlite_kv_cursor_key_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_cursor_key>>(
          'unqlite_kv_cursor_key');
  late final _dart_unqlite_kv_cursor_key _unqlite_kv_cursor_key =
      _unqlite_kv_cursor_key_ptr.asFunction<_dart_unqlite_kv_cursor_key>();

  int unqlite_kv_cursor_key_callback(
    ffi.Pointer<unqlite_kv_cursor> pCursor,
    ffi.Pointer<ffi.NativeFunction<_typedefC_72>> xConsumer,
    ffi.Pointer<ffi.Void> pUserData,
  ) {
    return _unqlite_kv_cursor_key_callback(
      pCursor,
      xConsumer,
      pUserData,
    );
  }

  late final _unqlite_kv_cursor_key_callback_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_cursor_key_callback>>(
          'unqlite_kv_cursor_key_callback');
  late final _dart_unqlite_kv_cursor_key_callback
      _unqlite_kv_cursor_key_callback = _unqlite_kv_cursor_key_callback_ptr
          .asFunction<_dart_unqlite_kv_cursor_key_callback>();

  int unqlite_kv_cursor_data(
    ffi.Pointer<unqlite_kv_cursor> pCursor,
    ffi.Pointer<ffi.Void> pBuf,
    ffi.Pointer<ffi.Int64> pnData,
  ) {
    return _unqlite_kv_cursor_data(
      pCursor,
      pBuf,
      pnData,
    );
  }

  late final _unqlite_kv_cursor_data_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_cursor_data>>(
          'unqlite_kv_cursor_data');
  late final _dart_unqlite_kv_cursor_data _unqlite_kv_cursor_data =
      _unqlite_kv_cursor_data_ptr.asFunction<_dart_unqlite_kv_cursor_data>();

  int unqlite_kv_cursor_data_callback(
    ffi.Pointer<unqlite_kv_cursor> pCursor,
    ffi.Pointer<ffi.NativeFunction<_typedefC_73>> xConsumer,
    ffi.Pointer<ffi.Void> pUserData,
  ) {
    return _unqlite_kv_cursor_data_callback(
      pCursor,
      xConsumer,
      pUserData,
    );
  }

  late final _unqlite_kv_cursor_data_callback_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_cursor_data_callback>>(
          'unqlite_kv_cursor_data_callback');
  late final _dart_unqlite_kv_cursor_data_callback
      _unqlite_kv_cursor_data_callback = _unqlite_kv_cursor_data_callback_ptr
          .asFunction<_dart_unqlite_kv_cursor_data_callback>();

  int unqlite_kv_cursor_delete_entry(
    ffi.Pointer<unqlite_kv_cursor> pCursor,
  ) {
    return _unqlite_kv_cursor_delete_entry(
      pCursor,
    );
  }

  late final _unqlite_kv_cursor_delete_entry_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_cursor_delete_entry>>(
          'unqlite_kv_cursor_delete_entry');
  late final _dart_unqlite_kv_cursor_delete_entry
      _unqlite_kv_cursor_delete_entry = _unqlite_kv_cursor_delete_entry_ptr
          .asFunction<_dart_unqlite_kv_cursor_delete_entry>();

  int unqlite_kv_cursor_reset(
    ffi.Pointer<unqlite_kv_cursor> pCursor,
  ) {
    return _unqlite_kv_cursor_reset(
      pCursor,
    );
  }

  late final _unqlite_kv_cursor_reset_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_kv_cursor_reset>>(
          'unqlite_kv_cursor_reset');
  late final _dart_unqlite_kv_cursor_reset _unqlite_kv_cursor_reset =
      _unqlite_kv_cursor_reset_ptr.asFunction<_dart_unqlite_kv_cursor_reset>();

  int unqlite_begin(
    ffi.Pointer<unqlite> pDb,
  ) {
    return _unqlite_begin(
      pDb,
    );
  }

  late final _unqlite_begin_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_begin>>('unqlite_begin');
  late final _dart_unqlite_begin _unqlite_begin =
      _unqlite_begin_ptr.asFunction<_dart_unqlite_begin>();

  int unqlite_commit(
    ffi.Pointer<unqlite> pDb,
  ) {
    return _unqlite_commit(
      pDb,
    );
  }

  late final _unqlite_commit_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_commit>>('unqlite_commit');
  late final _dart_unqlite_commit _unqlite_commit =
      _unqlite_commit_ptr.asFunction<_dart_unqlite_commit>();

  int unqlite_rollback(
    ffi.Pointer<unqlite> pDb,
  ) {
    return _unqlite_rollback(
      pDb,
    );
  }

  late final _unqlite_rollback_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_rollback>>('unqlite_rollback');
  late final _dart_unqlite_rollback _unqlite_rollback =
      _unqlite_rollback_ptr.asFunction<_dart_unqlite_rollback>();

  int unqlite_lib_config(
    int nConfigOp,
  ) {
    return _unqlite_lib_config(
      nConfigOp,
    );
  }

  late final _unqlite_lib_config_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_lib_config>>('unqlite_lib_config');
  late final _dart_unqlite_lib_config _unqlite_lib_config =
      _unqlite_lib_config_ptr.asFunction<_dart_unqlite_lib_config>();

  int unqlite_lib_init() {
    return _unqlite_lib_init();
  }

  late final _unqlite_lib_init_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_lib_init>>('unqlite_lib_init');
  late final _dart_unqlite_lib_init _unqlite_lib_init =
      _unqlite_lib_init_ptr.asFunction<_dart_unqlite_lib_init>();

  int unqlite_lib_shutdown() {
    return _unqlite_lib_shutdown();
  }

  late final _unqlite_lib_shutdown_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_lib_shutdown>>(
          'unqlite_lib_shutdown');
  late final _dart_unqlite_lib_shutdown _unqlite_lib_shutdown =
      _unqlite_lib_shutdown_ptr.asFunction<_dart_unqlite_lib_shutdown>();

  int unqlite_lib_is_threadsafe() {
    return _unqlite_lib_is_threadsafe();
  }

  late final _unqlite_lib_is_threadsafe_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_lib_is_threadsafe>>(
          'unqlite_lib_is_threadsafe');
  late final _dart_unqlite_lib_is_threadsafe _unqlite_lib_is_threadsafe =
      _unqlite_lib_is_threadsafe_ptr
          .asFunction<_dart_unqlite_lib_is_threadsafe>();

  ffi.Pointer<ffi.Int8> unqlite_lib_version() {
    return _unqlite_lib_version();
  }

  late final _unqlite_lib_version_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_lib_version>>(
          'unqlite_lib_version');
  late final _dart_unqlite_lib_version _unqlite_lib_version =
      _unqlite_lib_version_ptr.asFunction<_dart_unqlite_lib_version>();

  ffi.Pointer<ffi.Int8> unqlite_lib_signature() {
    return _unqlite_lib_signature();
  }

  late final _unqlite_lib_signature_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_lib_signature>>(
          'unqlite_lib_signature');
  late final _dart_unqlite_lib_signature _unqlite_lib_signature =
      _unqlite_lib_signature_ptr.asFunction<_dart_unqlite_lib_signature>();

  ffi.Pointer<ffi.Int8> unqlite_lib_ident() {
    return _unqlite_lib_ident();
  }

  late final _unqlite_lib_ident_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_lib_ident>>('unqlite_lib_ident');
  late final _dart_unqlite_lib_ident _unqlite_lib_ident =
      _unqlite_lib_ident_ptr.asFunction<_dart_unqlite_lib_ident>();

  ffi.Pointer<ffi.Int8> unqlite_lib_copyright() {
    return _unqlite_lib_copyright();
  }

  late final _unqlite_lib_copyright_ptr =
      _lookup<ffi.NativeFunction<_c_unqlite_lib_copyright>>(
          'unqlite_lib_copyright');
  late final _dart_unqlite_lib_copyright _unqlite_lib_copyright =
      _unqlite_lib_copyright_ptr.asFunction<_dart_unqlite_lib_copyright>();
}

class unqlite_file extends ffi.Struct {
  external ffi.Pointer<unqlite_io_methods> pMethods;
}

class unqlite_io_methods extends ffi.Struct {
  @ffi.Int32()
  external int iVersion;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_1>> xClose;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_2>> xRead;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_3>> xWrite;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_4>> xTruncate;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_5>> xSync;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_6>> xFileSize;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_7>> xLock;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_8>> xUnlock;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_9>> xCheckReservedLock;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_10>> xSectorSize;
}

class unqlite_page extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> zData;

  external ffi.Pointer<ffi.Void> pUserData;

  @ffi.Uint64()
  external int pgno;
}

class unqlite_kv_io extends ffi.Struct {
  external ffi.Pointer<ffi.Void> pHandle;

  external ffi.Pointer<unqlite_kv_methods> pMethods;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_11>> xGet;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_12>> xLookup;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_13>> xNew;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_14>> xWrite;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_15>> xDontWrite;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_16>> xDontJournal;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_17>> xDontMkHot;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_18>> xPageRef;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_19>> xPageUnref;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_20>> xPageSize;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_21>> xReadOnly;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_22>> xTmpPage;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_24>> xSetUnpin;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_26>> xSetReload;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_27>> xErr;
}

class unqlite_kv_engine extends ffi.Struct {
  external ffi.Pointer<unqlite_kv_io> pIo;
}

class unqlite_kv_cursor extends ffi.Struct {
  external ffi.Pointer<unqlite_kv_engine> pStore;
}

class unqlite_kv_methods extends ffi.Struct {
  external ffi.Pointer<ffi.Int8> zName;

  @ffi.Int32()
  external int szKv;

  @ffi.Int32()
  external int szCursor;

  @ffi.Int32()
  external int iVersion;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_28>> xInit;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_29>> xRelease;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_30>> xConfig;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_31>> xOpen;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_32>> xReplace;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_33>> xAppend;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_34>> xCursorInit;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_35>> xSeek;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_36>> xFirst;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_37>> xLast;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_38>> xValid;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_39>> xNext;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_40>> xPrev;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_41>> xDelete;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_42>> xKeyLength;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_44>> xKey;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_45>> xDataLength;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_47>> xData;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_48>> xReset;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_49>> xCursorRelease;
}

class jx9_io_stream extends ffi.Opaque {}

class jx9_context extends ffi.Opaque {}

class jx9_value extends ffi.Opaque {}

class Sytm extends ffi.Struct {
  @ffi.Int32()
  external int tm_sec;

  @ffi.Int32()
  external int tm_min;

  @ffi.Int32()
  external int tm_hour;

  @ffi.Int32()
  external int tm_mday;

  @ffi.Int32()
  external int tm_mon;

  @ffi.Int32()
  external int tm_year;

  @ffi.Int32()
  external int tm_wday;

  @ffi.Int32()
  external int tm_yday;

  @ffi.Int32()
  external int tm_isdst;

  external ffi.Pointer<ffi.Int8> tm_zone;

  @ffi.Int64()
  external int tm_gmtoff;
}

class unqlite_vfs extends ffi.Struct {
  external ffi.Pointer<ffi.Int8> zName;

  @ffi.Int32()
  external int iVersion;

  @ffi.Int32()
  external int szOsFile;

  @ffi.Int32()
  external int mxPathname;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_50>> xOpen;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_51>> xDelete;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_52>> xAccess;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_53>> xFullPathname;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_54>> xTmpDir;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_55>> xSleep;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_56>> xCurrentTime;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_57>> xGetLastError;
}

class unqlite_vm extends ffi.Opaque {}

class unqlite extends ffi.Opaque {}

class SyMutex extends ffi.Opaque {}

class SyMutexMethods extends ffi.Struct {
  external ffi.Pointer<ffi.NativeFunction<_typedefC_58>> xGlobalInit;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_59>> xGlobalRelease;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_60>> xNew;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_61>> xRelease;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_62>> xEnter;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_63>> xTryEnter;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_64>> xLeave;
}

class SyMemMethods extends ffi.Struct {
  external ffi.Pointer<ffi.NativeFunction<_typedefC_65>> xAlloc;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_66>> xRealloc;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_67>> xFree;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_68>> xChunkSize;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_69>> xInit;

  external ffi.Pointer<ffi.NativeFunction<_typedefC_70>> xRelease;

  external ffi.Pointer<ffi.Void> pUserData;
}

class SyString extends ffi.Struct {
  external ffi.Pointer<ffi.Int8> zString;

  @ffi.Uint32()
  external int nByte;
}

class syiovec extends ffi.Struct {
  @ffi.Uint64()
  external int nLen;

  external ffi.Pointer<ffi.Int8> pBase;
}

const int _VCRT_COMPILER_PREPROCESSOR = 1;

const int _SAL_VERSION = 20;

const int __SAL_H_VERSION = 180000000;

const int _USE_DECLSPECS_FOR_SAL = 0;

const int _USE_ATTRIBUTES_FOR_SAL = 0;

const int _CRT_PACKING = 8;

const int _VCRUNTIME_DISABLED_WARNINGS = 4514;

const int _HAS_EXCEPTIONS = 1;

const int _WCHAR_T_DEFINED = 1;

const int NULL = 0;

const int _HAS_CXX17 = 0;

const int _HAS_CXX20 = 0;

const int _HAS_NODISCARD = 1;

const String UNQLITE_VERSION = '1.1.9';

const int UNQLITE_VERSION_NUMBER = 1001009;

const String UNQLITE_SIG = 'unqlite/1.1.9';

const String UNQLITE_IDENT = 'unqlite:29c173b1-ac2c-4b49-93ba-e600619e304e';

const String UNQLITE_COPYRIGHT =
    'Copyright (C) Symisc Systems, S.U.A.R.L [Mrad Chems Eddine <chm@symisc.net>] 2012-2019, http://unqlite.org/';

const int SXRET_OK = 0;

const int SXERR_MEM = -1;

const int SXERR_IO = -2;

const int SXERR_EMPTY = -3;

const int SXERR_LOCKED = -4;

const int SXERR_ORANGE = -5;

const int SXERR_NOTFOUND = -6;

const int SXERR_LIMIT = -7;

const int SXERR_MORE = -8;

const int SXERR_INVALID = -9;

const int SXERR_ABORT = -10;

const int SXERR_EXISTS = -11;

const int SXERR_SYNTAX = -12;

const int SXERR_UNKNOWN = -13;

const int SXERR_BUSY = -14;

const int SXERR_OVERFLOW = -15;

const int SXERR_WILLBLOCK = -16;

const int SXERR_NOTIMPLEMENTED = -17;

const int SXERR_EOF = -18;

const int SXERR_PERM = -19;

const int SXERR_NOOP = -20;

const int SXERR_FORMAT = -21;

const int SXERR_NEXT = -22;

const int SXERR_OS = -23;

const int SXERR_CORRUPT = -24;

const int SXERR_CONTINUE = -25;

const int SXERR_NOMATCH = -26;

const int SXERR_RESET = -27;

const int SXERR_DONE = -28;

const int SXERR_SHORT = -29;

const int SXERR_PATH = -30;

const int SXERR_TIMEOUT = -31;

const int SXERR_BIG = -32;

const int SXERR_RETRY = -33;

const int SXERR_IGNORE = -63;

const int UNQLITE_OK = 0;

const int UNQLITE_NOMEM = -1;

const int UNQLITE_ABORT = -10;

const int UNQLITE_IOERR = -2;

const int UNQLITE_CORRUPT = -24;

const int UNQLITE_LOCKED = -4;

const int UNQLITE_BUSY = -14;

const int UNQLITE_DONE = -28;

const int UNQLITE_PERM = -19;

const int UNQLITE_NOTIMPLEMENTED = -17;

const int UNQLITE_NOTFOUND = -6;

const int UNQLITE_NOOP = -20;

const int UNQLITE_INVALID = -9;

const int UNQLITE_EOF = -18;

const int UNQLITE_UNKNOWN = -13;

const int UNQLITE_LIMIT = -7;

const int UNQLITE_EXISTS = -11;

const int UNQLITE_EMPTY = -3;

const int UNQLITE_COMPILE_ERR = -70;

const int UNQLITE_VM_ERR = -71;

const int UNQLITE_FULL = -73;

const int UNQLITE_CANTOPEN = -74;

const int UNQLITE_READ_ONLY = -75;

const int UNQLITE_LOCKERR = -76;

const int UNQLITE_CONFIG_JX9_ERR_LOG = 1;

const int UNQLITE_CONFIG_MAX_PAGE_CACHE = 2;

const int UNQLITE_CONFIG_ERR_LOG = 3;

const int UNQLITE_CONFIG_KV_ENGINE = 4;

const int UNQLITE_CONFIG_DISABLE_AUTO_COMMIT = 5;

const int UNQLITE_CONFIG_GET_KV_NAME = 6;

const int UNQLITE_VM_CONFIG_OUTPUT = 1;

const int UNQLITE_VM_CONFIG_IMPORT_PATH = 2;

const int UNQLITE_VM_CONFIG_ERR_REPORT = 3;

const int UNQLITE_VM_CONFIG_RECURSION_DEPTH = 4;

const int UNQLITE_VM_OUTPUT_LENGTH = 5;

const int UNQLITE_VM_CONFIG_CREATE_VAR = 6;

const int UNQLITE_VM_CONFIG_HTTP_REQUEST = 7;

const int UNQLITE_VM_CONFIG_SERVER_ATTR = 8;

const int UNQLITE_VM_CONFIG_ENV_ATTR = 9;

const int UNQLITE_VM_CONFIG_EXEC_VALUE = 10;

const int UNQLITE_VM_CONFIG_IO_STREAM = 11;

const int UNQLITE_VM_CONFIG_ARGV_ENTRY = 12;

const int UNQLITE_VM_CONFIG_EXTRACT_OUTPUT = 13;

const int UNQLITE_KV_CONFIG_HASH_FUNC = 1;

const int UNQLITE_KV_CONFIG_CMP_FUNC = 2;

const int UNQLITE_LIB_CONFIG_USER_MALLOC = 1;

const int UNQLITE_LIB_CONFIG_MEM_ERR_CALLBACK = 2;

const int UNQLITE_LIB_CONFIG_USER_MUTEX = 3;

const int UNQLITE_LIB_CONFIG_THREAD_LEVEL_SINGLE = 4;

const int UNQLITE_LIB_CONFIG_THREAD_LEVEL_MULTI = 5;

const int UNQLITE_LIB_CONFIG_VFS = 6;

const int UNQLITE_LIB_CONFIG_STORAGE_ENGINE = 7;

const int UNQLITE_LIB_CONFIG_PAGE_SIZE = 8;

const int UNQLITE_OPEN_READONLY = 1;

const int UNQLITE_OPEN_READWRITE = 2;

const int UNQLITE_OPEN_CREATE = 4;

const int UNQLITE_OPEN_EXCLUSIVE = 8;

const int UNQLITE_OPEN_TEMP_DB = 16;

const int UNQLITE_OPEN_NOMUTEX = 32;

const int UNQLITE_OPEN_OMIT_JOURNALING = 64;

const int UNQLITE_OPEN_IN_MEMORY = 128;

const int UNQLITE_OPEN_MMAP = 256;

const int UNQLITE_SYNC_NORMAL = 2;

const int UNQLITE_SYNC_FULL = 3;

const int UNQLITE_SYNC_DATAONLY = 16;

const int UNQLITE_LOCK_NONE = 0;

const int UNQLITE_LOCK_SHARED = 1;

const int UNQLITE_LOCK_RESERVED = 2;

const int UNQLITE_LOCK_PENDING = 3;

const int UNQLITE_LOCK_EXCLUSIVE = 4;

const int UNQLITE_ACCESS_EXISTS = 0;

const int UNQLITE_ACCESS_READWRITE = 1;

const int UNQLITE_ACCESS_READ = 2;

const int UNQLITE_CURSOR_MATCH_EXACT = 1;

const int UNQLITE_CURSOR_MATCH_LE = 2;

const int UNQLITE_CURSOR_MATCH_GE = 3;

const String UNQLITE_JOURNAL_FILE_SUFFIX = '_unqlite_journal';

const int UNQLITE_CTX_ERR = 1;

const int UNQLITE_CTX_WARNING = 2;

const int UNQLITE_CTX_NOTICE = 3;

typedef _c_unqlite_open = ffi.Int32 Function(
  ffi.Pointer<ffi.Pointer<unqlite>> ppDB,
  ffi.Pointer<ffi.Int8> zFilename,
  ffi.Uint32 iMode,
);

typedef _dart_unqlite_open = int Function(
  ffi.Pointer<ffi.Pointer<unqlite>> ppDB,
  ffi.Pointer<ffi.Int8> zFilename,
  int iMode,
);

typedef _c_unqlite_config = ffi.Int32 Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Int32 nOp,
);

typedef _dart_unqlite_config = int Function(
  ffi.Pointer<unqlite> pDb,
  int nOp,
);

typedef _c_unqlite_close = ffi.Int32 Function(
  ffi.Pointer<unqlite> pDb,
);

typedef _dart_unqlite_close = int Function(
  ffi.Pointer<unqlite> pDb,
);

typedef _c_unqlite_kv_store = ffi.Int32 Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<ffi.Void> pKey,
  ffi.Int32 nKeyLen,
  ffi.Pointer<ffi.Void> pData,
  ffi.Int64 nDataLen,
);

typedef _dart_unqlite_kv_store = int Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<ffi.Void> pKey,
  int nKeyLen,
  ffi.Pointer<ffi.Void> pData,
  int nDataLen,
);

typedef _c_unqlite_kv_append = ffi.Int32 Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<ffi.Void> pKey,
  ffi.Int32 nKeyLen,
  ffi.Pointer<ffi.Void> pData,
  ffi.Int64 nDataLen,
);

typedef _dart_unqlite_kv_append = int Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<ffi.Void> pKey,
  int nKeyLen,
  ffi.Pointer<ffi.Void> pData,
  int nDataLen,
);

typedef _c_unqlite_kv_store_fmt = ffi.Int32 Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<ffi.Void> pKey,
  ffi.Int32 nKeyLen,
  ffi.Pointer<ffi.Int8> zFormat,
);

typedef _dart_unqlite_kv_store_fmt = int Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<ffi.Void> pKey,
  int nKeyLen,
  ffi.Pointer<ffi.Int8> zFormat,
);

typedef _c_unqlite_kv_append_fmt = ffi.Int32 Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<ffi.Void> pKey,
  ffi.Int32 nKeyLen,
  ffi.Pointer<ffi.Int8> zFormat,
);

typedef _dart_unqlite_kv_append_fmt = int Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<ffi.Void> pKey,
  int nKeyLen,
  ffi.Pointer<ffi.Int8> zFormat,
);

typedef _c_unqlite_kv_fetch = ffi.Int32 Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<ffi.Void> pKey,
  ffi.Int32 nKeyLen,
  ffi.Pointer<ffi.Void> pBuf,
  ffi.Pointer<ffi.Int64> pBufLen,
);

typedef _dart_unqlite_kv_fetch = int Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<ffi.Void> pKey,
  int nKeyLen,
  ffi.Pointer<ffi.Void> pBuf,
  ffi.Pointer<ffi.Int64> pBufLen,
);

typedef _typedefC_71 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint32,
  ffi.Pointer<ffi.Void>,
);

typedef _c_unqlite_kv_fetch_callback = ffi.Int32 Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<ffi.Void> pKey,
  ffi.Int32 nKeyLen,
  ffi.Pointer<ffi.NativeFunction<_typedefC_71>> xConsumer,
  ffi.Pointer<ffi.Void> pUserData,
);

typedef _dart_unqlite_kv_fetch_callback = int Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<ffi.Void> pKey,
  int nKeyLen,
  ffi.Pointer<ffi.NativeFunction<_typedefC_71>> xConsumer,
  ffi.Pointer<ffi.Void> pUserData,
);

typedef _c_unqlite_kv_delete = ffi.Int32 Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<ffi.Void> pKey,
  ffi.Int32 nKeyLen,
);

typedef _dart_unqlite_kv_delete = int Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<ffi.Void> pKey,
  int nKeyLen,
);

typedef _c_unqlite_kv_config = ffi.Int32 Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Int32 iOp,
);

typedef _dart_unqlite_kv_config = int Function(
  ffi.Pointer<unqlite> pDb,
  int iOp,
);

typedef _c_unqlite_kv_cursor_init = ffi.Int32 Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<ffi.Pointer<unqlite_kv_cursor>> ppOut,
);

typedef _dart_unqlite_kv_cursor_init = int Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<ffi.Pointer<unqlite_kv_cursor>> ppOut,
);

typedef _c_unqlite_kv_cursor_release = ffi.Int32 Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<unqlite_kv_cursor> pCur,
);

typedef _dart_unqlite_kv_cursor_release = int Function(
  ffi.Pointer<unqlite> pDb,
  ffi.Pointer<unqlite_kv_cursor> pCur,
);

typedef _c_unqlite_kv_cursor_seek = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
  ffi.Pointer<ffi.Void> pKey,
  ffi.Int32 nKeyLen,
  ffi.Int32 iPos,
);

typedef _dart_unqlite_kv_cursor_seek = int Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
  ffi.Pointer<ffi.Void> pKey,
  int nKeyLen,
  int iPos,
);

typedef _c_unqlite_kv_cursor_first_entry = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
);

typedef _dart_unqlite_kv_cursor_first_entry = int Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
);

typedef _c_unqlite_kv_cursor_last_entry = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
);

typedef _dart_unqlite_kv_cursor_last_entry = int Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
);

typedef _c_unqlite_kv_cursor_valid_entry = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
);

typedef _dart_unqlite_kv_cursor_valid_entry = int Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
);

typedef _c_unqlite_kv_cursor_next_entry = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
);

typedef _dart_unqlite_kv_cursor_next_entry = int Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
);

typedef _c_unqlite_kv_cursor_prev_entry = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
);

typedef _dart_unqlite_kv_cursor_prev_entry = int Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
);

typedef _c_unqlite_kv_cursor_key = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
  ffi.Pointer<ffi.Void> pBuf,
  ffi.Pointer<ffi.Int32> pnByte,
);

typedef _dart_unqlite_kv_cursor_key = int Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
  ffi.Pointer<ffi.Void> pBuf,
  ffi.Pointer<ffi.Int32> pnByte,
);

typedef _typedefC_72 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint32,
  ffi.Pointer<ffi.Void>,
);

typedef _c_unqlite_kv_cursor_key_callback = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
  ffi.Pointer<ffi.NativeFunction<_typedefC_72>> xConsumer,
  ffi.Pointer<ffi.Void> pUserData,
);

typedef _dart_unqlite_kv_cursor_key_callback = int Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
  ffi.Pointer<ffi.NativeFunction<_typedefC_72>> xConsumer,
  ffi.Pointer<ffi.Void> pUserData,
);

typedef _c_unqlite_kv_cursor_data = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
  ffi.Pointer<ffi.Void> pBuf,
  ffi.Pointer<ffi.Int64> pnData,
);

typedef _dart_unqlite_kv_cursor_data = int Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
  ffi.Pointer<ffi.Void> pBuf,
  ffi.Pointer<ffi.Int64> pnData,
);

typedef _typedefC_73 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint32,
  ffi.Pointer<ffi.Void>,
);

typedef _c_unqlite_kv_cursor_data_callback = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
  ffi.Pointer<ffi.NativeFunction<_typedefC_73>> xConsumer,
  ffi.Pointer<ffi.Void> pUserData,
);

typedef _dart_unqlite_kv_cursor_data_callback = int Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
  ffi.Pointer<ffi.NativeFunction<_typedefC_73>> xConsumer,
  ffi.Pointer<ffi.Void> pUserData,
);

typedef _c_unqlite_kv_cursor_delete_entry = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
);

typedef _dart_unqlite_kv_cursor_delete_entry = int Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
);

typedef _c_unqlite_kv_cursor_reset = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
);

typedef _dart_unqlite_kv_cursor_reset = int Function(
  ffi.Pointer<unqlite_kv_cursor> pCursor,
);

typedef _c_unqlite_begin = ffi.Int32 Function(
  ffi.Pointer<unqlite> pDb,
);

typedef _dart_unqlite_begin = int Function(
  ffi.Pointer<unqlite> pDb,
);

typedef _c_unqlite_commit = ffi.Int32 Function(
  ffi.Pointer<unqlite> pDb,
);

typedef _dart_unqlite_commit = int Function(
  ffi.Pointer<unqlite> pDb,
);

typedef _c_unqlite_rollback = ffi.Int32 Function(
  ffi.Pointer<unqlite> pDb,
);

typedef _dart_unqlite_rollback = int Function(
  ffi.Pointer<unqlite> pDb,
);

typedef _c_unqlite_lib_config = ffi.Int32 Function(
  ffi.Int32 nConfigOp,
);

typedef _dart_unqlite_lib_config = int Function(
  int nConfigOp,
);

typedef _c_unqlite_lib_init = ffi.Int32 Function();

typedef _dart_unqlite_lib_init = int Function();

typedef _c_unqlite_lib_shutdown = ffi.Int32 Function();

typedef _dart_unqlite_lib_shutdown = int Function();

typedef _c_unqlite_lib_is_threadsafe = ffi.Int32 Function();

typedef _dart_unqlite_lib_is_threadsafe = int Function();

typedef _c_unqlite_lib_version = ffi.Pointer<ffi.Int8> Function();

typedef _dart_unqlite_lib_version = ffi.Pointer<ffi.Int8> Function();

typedef _c_unqlite_lib_signature = ffi.Pointer<ffi.Int8> Function();

typedef _dart_unqlite_lib_signature = ffi.Pointer<ffi.Int8> Function();

typedef _c_unqlite_lib_ident = ffi.Pointer<ffi.Int8> Function();

typedef _dart_unqlite_lib_ident = ffi.Pointer<ffi.Int8> Function();

typedef _c_unqlite_lib_copyright = ffi.Pointer<ffi.Int8> Function();

typedef _dart_unqlite_lib_copyright = ffi.Pointer<ffi.Int8> Function();

typedef _typedefC_1 = ffi.Int32 Function(
  ffi.Pointer<unqlite_file>,
);

typedef _typedefC_2 = ffi.Int32 Function(
  ffi.Pointer<unqlite_file>,
  ffi.Pointer<ffi.Void>,
  ffi.Int64,
  ffi.Int64,
);

typedef _typedefC_3 = ffi.Int32 Function(
  ffi.Pointer<unqlite_file>,
  ffi.Pointer<ffi.Void>,
  ffi.Int64,
  ffi.Int64,
);

typedef _typedefC_4 = ffi.Int32 Function(
  ffi.Pointer<unqlite_file>,
  ffi.Int64,
);

typedef _typedefC_5 = ffi.Int32 Function(
  ffi.Pointer<unqlite_file>,
  ffi.Int32,
);

typedef _typedefC_6 = ffi.Int32 Function(
  ffi.Pointer<unqlite_file>,
  ffi.Pointer<ffi.Int64>,
);

typedef _typedefC_7 = ffi.Int32 Function(
  ffi.Pointer<unqlite_file>,
  ffi.Int32,
);

typedef _typedefC_8 = ffi.Int32 Function(
  ffi.Pointer<unqlite_file>,
  ffi.Int32,
);

typedef _typedefC_9 = ffi.Int32 Function(
  ffi.Pointer<unqlite_file>,
  ffi.Pointer<ffi.Int32>,
);

typedef _typedefC_10 = ffi.Int32 Function(
  ffi.Pointer<unqlite_file>,
);

typedef _typedefC_11 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint64,
  ffi.Pointer<ffi.Pointer<unqlite_page>>,
);

typedef _typedefC_12 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint64,
  ffi.Pointer<ffi.Pointer<unqlite_page>>,
);

typedef _typedefC_13 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Pointer<unqlite_page>>,
);

typedef _typedefC_14 = ffi.Int32 Function(
  ffi.Pointer<unqlite_page>,
);

typedef _typedefC_15 = ffi.Int32 Function(
  ffi.Pointer<unqlite_page>,
);

typedef _typedefC_16 = ffi.Int32 Function(
  ffi.Pointer<unqlite_page>,
);

typedef _typedefC_17 = ffi.Int32 Function(
  ffi.Pointer<unqlite_page>,
);

typedef _typedefC_18 = ffi.Int32 Function(
  ffi.Pointer<unqlite_page>,
);

typedef _typedefC_19 = ffi.Int32 Function(
  ffi.Pointer<unqlite_page>,
);

typedef _typedefC_20 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_21 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_22 = ffi.Pointer<ffi.Uint8> Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_23 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_24 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.NativeFunction<_typedefC_23>>,
);

typedef _typedefC_25 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_26 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.NativeFunction<_typedefC_25>>,
);

typedef _typedefC_27 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
  ffi.Pointer<ffi.Int8>,
);

typedef _typedefC_28 = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_engine>,
  ffi.Int32,
);

typedef _typedefC_29 = ffi.Void Function(
  ffi.Pointer<unqlite_kv_engine>,
);

typedef _typedefC_30 = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_engine>,
  ffi.Int32,
  ffi.Pointer<ffi.Int8>,
);

typedef _typedefC_31 = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_engine>,
  ffi.Uint64,
);

typedef _typedefC_32 = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_engine>,
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
  ffi.Pointer<ffi.Void>,
  ffi.Int64,
);

typedef _typedefC_33 = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_engine>,
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
  ffi.Pointer<ffi.Void>,
  ffi.Int64,
);

typedef _typedefC_34 = ffi.Void Function(
  ffi.Pointer<unqlite_kv_cursor>,
);

typedef _typedefC_35 = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor>,
  ffi.Pointer<ffi.Void>,
  ffi.Int32,
  ffi.Int32,
);

typedef _typedefC_36 = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor>,
);

typedef _typedefC_37 = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor>,
);

typedef _typedefC_38 = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor>,
);

typedef _typedefC_39 = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor>,
);

typedef _typedefC_40 = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor>,
);

typedef _typedefC_41 = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor>,
);

typedef _typedefC_42 = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor>,
  ffi.Pointer<ffi.Int32>,
);

typedef _typedefC_43 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint32,
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_44 = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor>,
  ffi.Pointer<ffi.NativeFunction<_typedefC_43>>,
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_45 = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor>,
  ffi.Pointer<ffi.Int64>,
);

typedef _typedefC_46 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint32,
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_47 = ffi.Int32 Function(
  ffi.Pointer<unqlite_kv_cursor>,
  ffi.Pointer<ffi.NativeFunction<_typedefC_46>>,
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_48 = ffi.Void Function(
  ffi.Pointer<unqlite_kv_cursor>,
);

typedef _typedefC_49 = ffi.Void Function(
  ffi.Pointer<unqlite_kv_cursor>,
);

typedef _typedefC_50 = ffi.Int32 Function(
  ffi.Pointer<unqlite_vfs>,
  ffi.Pointer<ffi.Int8>,
  ffi.Pointer<unqlite_file>,
  ffi.Uint32,
);

typedef _typedefC_51 = ffi.Int32 Function(
  ffi.Pointer<unqlite_vfs>,
  ffi.Pointer<ffi.Int8>,
  ffi.Int32,
);

typedef _typedefC_52 = ffi.Int32 Function(
  ffi.Pointer<unqlite_vfs>,
  ffi.Pointer<ffi.Int8>,
  ffi.Int32,
  ffi.Pointer<ffi.Int32>,
);

typedef _typedefC_53 = ffi.Int32 Function(
  ffi.Pointer<unqlite_vfs>,
  ffi.Pointer<ffi.Int8>,
  ffi.Int32,
  ffi.Pointer<ffi.Int8>,
);

typedef _typedefC_54 = ffi.Int32 Function(
  ffi.Pointer<unqlite_vfs>,
  ffi.Pointer<ffi.Int8>,
  ffi.Int32,
);

typedef _typedefC_55 = ffi.Int32 Function(
  ffi.Pointer<unqlite_vfs>,
  ffi.Int32,
);

typedef _typedefC_56 = ffi.Int32 Function(
  ffi.Pointer<unqlite_vfs>,
  ffi.Pointer<Sytm>,
);

typedef _typedefC_57 = ffi.Int32 Function(
  ffi.Pointer<unqlite_vfs>,
  ffi.Int32,
  ffi.Pointer<ffi.Int8>,
);

typedef _typedefC_58 = ffi.Int32 Function();

typedef _typedefC_59 = ffi.Void Function();

typedef _typedefC_60 = ffi.Pointer<SyMutex> Function(
  ffi.Int32,
);

typedef _typedefC_61 = ffi.Void Function(
  ffi.Pointer<SyMutex>,
);

typedef _typedefC_62 = ffi.Void Function(
  ffi.Pointer<SyMutex>,
);

typedef _typedefC_63 = ffi.Int32 Function(
  ffi.Pointer<SyMutex>,
);

typedef _typedefC_64 = ffi.Void Function(
  ffi.Pointer<SyMutex>,
);

typedef _typedefC_65 = ffi.Pointer<ffi.Void> Function(
  ffi.Uint32,
);

typedef _typedefC_66 = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void>,
  ffi.Uint32,
);

typedef _typedefC_67 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_68 = ffi.Uint32 Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_69 = ffi.Int32 Function(
  ffi.Pointer<ffi.Void>,
);

typedef _typedefC_70 = ffi.Void Function(
  ffi.Pointer<ffi.Void>,
);
